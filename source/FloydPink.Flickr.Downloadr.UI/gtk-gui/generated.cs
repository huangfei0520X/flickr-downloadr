// This file has been generated by the GUI designer. Do not modify.
using System;
using Gtk;

namespace Stetic {
    internal class Gui {
        private static bool initialized;

        internal static void Initialize(Widget iconRenderer) {
            if ((initialized == false)) {
                initialized = true;
            }
        }
    }

    internal class BinContainer {
        private Widget child;
        private UIManager uimanager;

        public static BinContainer Attach(Bin bin) {
            var bc = new BinContainer();
            bin.SizeRequested += bc.OnSizeRequested;
            bin.SizeAllocated += bc.OnSizeAllocated;
            bin.Added += bc.OnAdded;
            return bc;
        }

        private void OnSizeRequested(object sender, SizeRequestedArgs args) {
            if ((this.child != null)) {
                args.Requisition = this.child.SizeRequest();
            }
        }

        private void OnSizeAllocated(object sender, SizeAllocatedArgs args) {
            if ((this.child != null)) {
                this.child.Allocation = args.Allocation;
            }
        }

        private void OnAdded(object sender, AddedArgs args) {
            this.child = args.Widget;
        }

        public void SetUiManager(UIManager uim) {
            this.uimanager = uim;
            this.child.Realized += OnRealized;
        }

        private void OnRealized(object sender, EventArgs args) {
            if ((this.uimanager != null)) {
                Widget w;
                w = this.child.Toplevel;
                if (((w != null)
                     && typeof (Window).IsInstanceOfType(w))) {
                    ((Window) (w)).AddAccelGroup(this.uimanager.AccelGroup);
                    this.uimanager = null;
                }
            }
        }
    }

    internal class ActionGroups {
        public static ActionGroup GetActionGroup(Type type) {
            return GetActionGroup(type.FullName);
        }

        public static ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
}
