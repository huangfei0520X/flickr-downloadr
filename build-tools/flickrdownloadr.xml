<project>
    <shortName>flickrdownloadr</shortName>
    <fullName>flickr downloadr</fullName>
    <version>0.0.1</version>
    <licenseFile>../LICENSE</licenseFile>
    <wrapLicenseFileText>0</wrapLicenseFileText>
    <leftImage>../misc/icon.png</leftImage>
    <logoImage>../misc/logo-Small-About.png</logoImage>
    <splashImage>../misc/logo.png</splashImage>
    <wmImage>../misc/mac-osx-icon/icon-48.png</wmImage>
    <componentList>
        <component>
            <name>core</name>
            <description>flickr downloadr</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <desktopShortcutList>
                <shortcut>
                    <comment>Batch download photos from flickr</comment>
                    <exec>${installdir}/flickrdownloadr</exec>
                    <icon>${installdir}/icon.png</icon>
                    <name>${product_fullname}-${product_version}</name>
                    <path>${installdir}/</path>
                    <platforms>all</platforms>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}\flickr-downloadr.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}\icon.ico</windowsIcon>
                    <windowsPath>${installdir}</windowsPath>
                </shortcut>
            </desktopShortcutList>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runAsAdmin>0</runAsAdmin>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>../source/bin/Release/linux-bundle/bin</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../source/bin/Release/linux-bundle/flickrdownloadr</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../misc/icon.png</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinuxx64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>../source/bin/Release/linux-bundle/bin</origin>
                        </distributionDirectory>
                        <distributionFile>
                            <origin>../source/bin/Release/linux-bundle/flickrdownloadr</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../misc/icon.png</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../source/bin/Release/flickr-downloadr.exe</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/DotNetOpenAuth.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.Bootstrap.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.Logic.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.Model.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.OAuth.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.Presentation.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/FloydPink.Flickr.Downloadr.Repository.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/log4net.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/ServiceStack.Text.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../source/bin/Release/StructureMap.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../misc/icon.png</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../misc/icon.ico</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>../source/bin/Release/flickr downloadr.app</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment>${product_shortname}-${product_version}</comment>
                    <name>${product_shortname}-${product_version}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}\flickr-downloadr.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}\icon.ico</windowsIcon>
                    <windowsPath>${installdir}</windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
        <component>
            <name>dotnet</name>
            <description>.NET Framework</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>Microsoft .NET Framework 4.5</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>.NET installer</description>
                    <destination>${installdir}</destination>
                    <name>dotnet</name>
                    <platforms>windows</platforms>
                    <ruleList>
                        <isTrue value="0"/>
                    </ruleList>
                </folder>
            </folderList>
            <readyToInstallActionList>
                <autodetectDotNetFramework>
                    <validDotNetVersionList>
                        <validDotNetVersion>
                            <frameworkType>full</frameworkType>
                            <maxVersion></maxVersion>
                            <minVersion>4.0</minVersion>
                        </validDotNetVersion>
                    </validDotNetVersionList>
                </autodetectDotNetFramework>
                <actionGroup>
                    <progressText>Installing .NET framework</progressText>
                    <actionList>
                        <httpGet>
                            <filename>${system_temp_directory}/dotnet45.exe</filename>
                            <progressText>Downloading GTK# installer</progressText>
                            <url>http://flickrdownloadr.com/installer/windows/dependencies/dotnet45.exe</url>
                        </httpGet>
                        <runProgram>
                            <program>${system_temp_directory}/dotnetfx.exe</program>
                            <programArguments>/q:a "/c:install.exe /qb"</programArguments>
                            <progressText>Installing GTK# Framework</progressText>
                        </runProgram>
                        <deleteFile>
                            <path>${system_temp_directory}/dotnetfx.exe</path>
                        </deleteFile>
                    </actionList>
                    <ruleList>
                        <isFalse>
                            <value>${dotnet_autodetected}</value>
                        </isFalse>
                    </ruleList>
                </actionGroup>
            </readyToInstallActionList>
            <shouldPackRuleList>
                <isTrue>
                    <value>${pack_windows_platform_files}</value>
                </isTrue>
            </shouldPackRuleList>
        </component>
        <component>
            <name>gtksharp</name>
            <description>GTK# Framework</description>
            <canBeEdited>0</canBeEdited>
            <detailedDescription>GTK# is a Graphical User Interface Toolkit for Mono and .NET which is used to build the user interface for flickr downloadr</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>GTK#</description>
                    <destination>${installdir}</destination>
                    <name>gtksharp</name>
                    <platforms>windows</platforms>
                </folder>
            </folderList>
            <readyToInstallActionList>
                <actionGroup>
                    <progressText>Installing GTK# Framework</progressText>
                    <actionList>
                        <showProgressDialog>
                            <progressText>Downloading And Installing GTK# Framework</progressText>
                            <title>Installing GTK# Framework</title>
                            <actionList>
                                <httpGet>
                                    <filename>${system_temp_directory}/gtk-sharp.msi</filename>
                                    <progressText>Downloading GTK# Installer</progressText>
                                    <url>http://flickrdownloadr.com/installer/windows/dependencies/gtk-sharp-2.12.25.msi</url>
                                </httpGet>
                                <runProgram>
                                    <program>msiexec</program>
                                    <programArguments>/i ${system_temp_directory}\gtk-sharp.msi</programArguments>
                                    <progressText>Installing GTK#</progressText>
                                </runProgram>
                            </actionList>
                            <ruleList>
                                <registryTest>
                                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\v4.0.30319\AssemblyFoldersEx\GtkSharp</key>
                                    <logic>exists</logic>
                                    <name></name>
                                    <negate>1</negate>
                                </registryTest>
                            </ruleList>
                        </showProgressDialog>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
            </readyToInstallActionList>
            <shouldPackRuleList>
                <isTrue>
                    <value>${pack_windows_platform_files}</value>
                </isTrue>
            </shouldPackRuleList>
        </component>
        <component>
            <name>monoinstaller</name>
            <description>Mono &amp; GTK# Installer</description>
            <canBeEdited>0</canBeEdited>
            <downloadable>1</downloadable>
            <selected>0</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Mono Installer</description>
                    <destination>${installdir}</destination>
                    <name>monoinstaller</name>
                    <platforms>all</platforms>
                </folder>
            </folderList>
            <readyToInstallActionList>
                <actionGroup>
                    <progressText>Installing Mono Framework</progressText>
                    <actionList>
                        <actionGroup>
                            <progressText>Installing Mono Framework for Mac</progressText>
                            <actionList>
                                <showProgressDialog>
                                    <title>Installing Mono Framework for Mac</title>
                                    <actionList>
                                        <httpGet>
                                            <filename>${system_temp_directory}/MonoFramework-MRE-3.4.0.macos10.xamarin.x86.pkg</filename>
                                            <progressText>Downloading Mono Framework Installer</progressText>
                                            <url>http://download.mono-project.com/archive/3.4.0/macos-10-x86/MonoFramework-MRE-3.4.0.macos10.xamarin.x86.pkg</url>
                                        </httpGet>
                                        <runProgram>
                                            <program>open</program>
                                            <programArguments>-W "${system_temp_directory}/MonoFramework-MRE-3.4.0.macos10.xamarin.x86.pkg"</programArguments>
                                            <progressText>Installing Mono Framework</progressText>
                                        </runProgram>
                                    </actionList>
                                    <ruleList>
                                        <fileExists>
                                            <negate>1</negate>
                                            <path>/Library/Frameworks/Mono.framework</path>
                                        </fileExists>
                                    </ruleList>
                                </showProgressDialog>
                            </actionList>
                            <ruleList>
                                <platformTest>
                                    <type>osx</type>
                                </platformTest>
                            </ruleList>
                        </actionGroup>
                        <actionGroup>
                            <progressText>Installing Mono Framework...</progressText>
                            <actionList>
                                <showProgressDialog>
                                    <title>Installing Mono Framework for Linux</title>
                                    <actionList>
                                        <runProgram>
                                            <program>dpkg-query</program>
                                            <programArguments>-W libmono2.02.0-cil</programArguments>
                                            <ruleList>
                                                <programTest condition="is_in_path" name="dpkg-query"/>
                                            </ruleList>
                                        </runProgram>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable name="mono_installed" value="1"/>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues logic="equals" value1="1" value2="${program_exit_code}"/>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <setInstallerVariable name="mono_installed" value="0"/>
                                            </elseActionList>
                                            <ruleList>
                                                <programTest condition="is_in_path" name="dpkg-query"/>
                                            </ruleList>
                                        </if>
                                        <runProgram>
                                            <program>rpm</program>
                                            <programArguments>-q mono-core</programArguments>
                                            <ruleList>
                                                <programTest condition="is_in_path" name="rpm"/>
                                            </ruleList>
                                        </runProgram>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable name="mono_installed" value="1"/>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues logic="equals" value1="1" value2="${program_exit_code}"/>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <setInstallerVariable name="mono_installed" value="0"/>
                                            </elseActionList>
                                            <ruleList>
                                                <programTest condition="is_in_path" name="rpm"/>
                                            </ruleList>
                                        </if>
                                        <runProgram>
                                            <program>apt-get</program>
                                            <programArguments>-y install mono-runtime</programArguments>
                                            <ruleList>
                                                <isFalse>
                                                    <value>${mono_installed}</value>
                                                </isFalse>
                                                <programTest>
                                                    <condition>is_in_path</condition>
                                                    <name>apt-get</name>
                                                </programTest>
                                            </ruleList>
                                        </runProgram>
                                    </actionList>
                                </showProgressDialog>
                            </actionList>
                            <ruleList>
                                <ruleGroup>
                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                    <ruleList>
                                        <platformTest>
                                            <type>linux</type>
                                        </platformTest>
                                        <platformTest>
                                            <type>linux-x64</type>
                                        </platformTest>
                                    </ruleList>
                                </ruleGroup>
                            </ruleList>
                        </actionGroup>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
            </readyToInstallActionList>
            <shouldPackRuleList>
                <isTrue>
                    <negate>1</negate>
                    <value>${pack_windows_platform_files}</value>
                </isTrue>
            </shouldPackRuleList>
        </component>
    </componentList>
    <postBuildActionList>
        <actionGroup>
            <explanation>Create Fancy DMG</explanation>
            <actionList>
                <createTimeStamp>
                    <format>%Y%m%d%H%M%S</format>
                    <variable>timestamp</variable>
                </createTimeStamp>
                <setInstallerVariable>
                    <name>tempDir</name>
                    <value>/tmp/.tmpDir${timestamp}</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>dmgName</name>
                    <value>../dist/${platform_name}/${project.installerFilename}.dmg</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>tempDmgFile</name>
                    <value>${tempDir}/tmp.dmg</value>
                </setInstallerVariable>
                <deleteFile>
                    <path>../dist/${platform_name}/${project.installerFilename}.dmg</path>
                </deleteFile>
                <deleteFile>
                    <path>${tempDir}</path>
                </deleteFile>
                <createDirectory>
                    <path>${tempDir}/output</path>
                </createDirectory>
                <createDirectory>
                    <path>${tempDir}/mnt</path>
                </createDirectory>
                <copyFile>
                    <destination>${tempDir}/output</destination>
                    <origin>../dist/${platform_name}/${project.installerFilename}</origin>
                </copyFile>
                <actionGroup>
                    <actionList>
                        <copyFile>
                            <destination>${tempDir}/output/.VolumeIcon.icns</destination>
                            <origin>../misc/mac-osx-icon/flickr-downloadr-new.icns</origin>
                        </copyFile>
                        <runProgram>
                            <program>SetFile</program>
                            <programArguments>-c icnC "${tempDir}/output/.VolumeIcon.icns"</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <fileExists path="../misc/mac-osx-icon/flickr-downloadr-new.icns"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <createDirectory>
                            <path>${tempDir}/output/.background</path>
                        </createDirectory>
                        <copyFile>
                            <destination>${tempDir}/output/.background/background.png</destination>
                            <origin>../misc/mac-osx-icon/dmg-background.png</origin>
                        </copyFile>
                    </actionList>
                    <ruleList>
                        <fileExists path="../misc/mac-osx-icon/dmg-background.png"/>
                    </ruleList>
                </actionGroup>
                <runProgram>
                    <program>hdiutil</program>
                    <programArguments>create -srcfolder "${tempDir}/output" -volname "${project.fullName} Installer" -fs HFS+ -fsargs "-c c=64,a=16,e=16" -format UDRW "${tempDmgFile}"</programArguments>
                </runProgram>
                <actionGroup>
                    <actionList>
                        <runProgram>
                            <program>hdiutil</program>
                            <programArguments>attach "${tempDmgFile}" -mountpoint "${tempDir}/mnt"</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>SetFile</program>
                            <programArguments>-a C "${tempDir}/mnt"</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>hdiutil</program>
                            <programArguments>detach "${tempDir}/mnt"</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <fileExists path="../misc/mac-osx-icon/flickr-downloadr-new.icns"/>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <runProgram>
                            <abortOnError>0</abortOnError>
                            <program>hdiutil</program>
                            <programArguments>detach "/Volumes/${project.fullName} Installer"</programArguments>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                        <runProgram>
                            <program>hdiutil</program>
                            <programArguments>attach -readwrite -noverify -noautoopen "${tempDmgFile}"</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>osascript</program>
                            <programArguments>-e 'tell application "Finder"
tell disk "${project.fullName} Installer"
open
set current view of container window to icon view
set toolbar visible of container window to false
set statusbar visible of container window to false
set the bounds of container window to {${dmg_window_bounds}}
set theViewOptions to the icon view options of container window
set arrangement of theViewOptions to not arranged
set icon size of theViewOptions to ${dmg_icon_size}
set background picture of theViewOptions to file ".background:background.png"
delay 5
update without registering applications
set position of item "${project.installerFilename}" of container window to {${dmg_icon_position}}
update without registering applications
delay 5
end tell
end tell'
          </programArguments>
                        </runProgram>
                        <runProgram>
                            <program>hdiutil</program>
                            <programArguments>detach "/Volumes/${project.fullName} Installer"</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <fileExists path="../misc/mac-osx-icon/dmg-background.png"/>
                    </ruleList>
                </actionGroup>
                <runProgram>
                    <program>hdiutil</program>
                    <programArguments>convert "${tempDmgFile}" -format UDZO -imagekey zlib-level=9 -o "${dmgName}"</programArguments>
                </runProgram>
                <deleteFile>
                    <path>${tempDir}</path>
                </deleteFile>
                <deleteFile>
                    <path>../dist/${platform_name}/${project.installerFilename}</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <isTrue>
                    <value>${pack_osx_platform_files}</value>
                </isTrue>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </postBuildActionList>
    <initializationActionList>
        <setInstallerVariable>
            <name>pack_windows_platform_files</name>
            <value>false</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>pack_osx_platform_files</name>
            <value>false</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>pack_linux_platform_files</name>
            <value>false</value>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>pack_linux-x64_platform_files</name>
            <value>false</value>
        </setInstallerVariable>
    </initializationActionList>
    <description>Batch download photos from flickr</description>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <height>480</height>
    <osxApplicationBundleIcon>../misc/mac-osx-icon/flickr-downloadr-new.icns</osxApplicationBundleIcon>
    <osxApplicationBundleIdentifier>com.floydpink.mac.flickrdownloadr</osxApplicationBundleIdentifier>
    <osxUninstallerApplicationBundleIcon>../misc/mac-osx-icon/flickr-downloadr-new.icns</osxUninstallerApplicationBundleIcon>
    <outputDirectory>../dist/${platform_name}</outputDirectory>
    <productComments>Batch download photos from flickr</productComments>
    <productContact>contact.us@flickrdownloadr.com</productContact>
    <productDisplayIcon>${installdir}\icon.ico</productDisplayIcon>
    <productUrlHelpLink>https://github.com/flickr-downloadr/flickr-downloadr/issues</productUrlHelpLink>
    <productUrlInfoAbout>http://flickrdownloadr.com</productUrlInfoAbout>
    <saveRelativePaths>1</saveRelativePaths>
    <summary>A cross-platform desktop app, written in Mono that would download (all or selected) photos from your photostream in their selected size along with their description, title and tags.</summary>
    <vendor>flickrdownloadr.com</vendor>
    <width>640</width>
    <windowsExecutableIcon>../misc/mac-osx-icon/installericon.ico</windowsExecutableIcon>
    <windowsUninstallerExecutableIcon>../misc/mac-osx-icon/installericon.ico</windowsUninstallerExecutableIcon>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
        </directoryParameter>
        <stringParameter name="dmg_icon_position" value="300, 100" ask="0">
            <description></description>
            <explanation></explanation>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <width>40</width>
        </stringParameter>
        <stringParameter name="dmg_window_bounds" value="400, 100, 885, 430" ask="0">
            <description></description>
            <explanation></explanation>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <width>40</width>
        </stringParameter>
        <stringParameter name="dmg_icon_size" value="72" ask="0">
            <description></description>
            <explanation></explanation>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <width>40</width>
        </stringParameter>
    </parameterList>
    <platformOptionsList>
        <platformOptions>
            <installerFilename>Install flickr downloadr.app</installerFilename>
            <platform>osx</platform>
        </platformOptions>
    </platformOptionsList>
</project>

